<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Modern Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="/stylesheets/style.css">
</head>
<body>
  <div class="container">
    <div class="header">
      <h1><i class="fas fa-tachometer-alt"></i> Admin Dashboard</h1>
      <p>Seamlessly manage your job postings and applications</p>
      <div class="text-end mt-3">
        <form action="/logout" method="POST" style="display: inline;">
          <button type="submit" class="btn btn-primary">Logout</button>
        </form>
      </div>      
    </div>

    <div class="row">
      <div class="col-lg-6">
        <div class="card">
          <div class="card-header"><i class="fas fa-briefcase icon"></i> Job Postings</div>
          <div class="card-body">
            <p>Easily create and manage your job postings.</p>
            <a href="/jobs/create" class="btn btn-primary">Create New Job</a>
          </div>
        </div>
      </div>

      <div class="col-lg-6">
        <div class="card">
          <div class="card-header"><i class="fas fa-folder-open icon"></i> Candidates</div>
          <div class="card-body">
            <p>Track and manage applications effectively.</p>
            <a href="/jobs/applications/all" class="btn btn-primary">View Applications</a>
          </div>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-6">
        <div class="card">
          <div class="card-header"><i class="fas fa-comments icon"></i> Communication</div>
          <div class="card-body">
            <p>Streamline communication with candidates.</p>
            <a href="/interviews/calendar" class="btn btn-primary">View Calendar</a>
          </div>
        </div>
      </div>

      <div class="col-lg-6">
        <div class="card">
          <div class="card-header"><i class="fas fa-users icon"></i> Candidates</div>
          <div class="card-body">
            <p>Manage all registered candidates.</p>
            <a href="/candidates" class="btn btn-primary">View All Candidates</a>
          </div>
        </div>
      </div>
      
      <div class="row mt-4">
        <div class="col-12">
          <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
              <span><i class="fas fa-chart-bar icon"></i> Applications Overview</span>
              <div class="d-flex align-items-center">
                <form id="search-form" class="d-flex me-2">
                  <input type="text" class="form-control me-2" id="searchInput" name="query" placeholder="Search..." style="max-width: 250px;">
                  <button type="submit" class="btn btn-primary">Search</button>
                </form>
                <button class="btn btn-primary filter-btn" data-status="active">Active</button>
                <button class="btn btn-primary filter-btn" data-status="expired">Expired</button>
              </div>
            </div>
            <div class="card-body">
              <table class="table table-bordered table-striped">
                <thead>
                  <tr>
                    <th>Title</th>
                    <th>Status</th>
                    <th>Actions</th>
                    <th>Applications</th>
                    <th>Ranking</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (jobs && jobs.length > 0) { %>
                    <% jobs.forEach(job => { %>
                      <tr>
                        <td><%= job.title %></td>
                        <td><%= job.status %></td>
                        <td>
                          <a href="/jobs/<%= job.job_id %>" class="btn btn-primary btn-sm">Details</a>
                          <button class="decline-btn" data-id="<%= job.job_id %>">Delete</button>
                        </td>
                        <td>
                          <a href="/jobs/<%= job.job_id %>/applications" class="btn btn-secondary btn-sm">View Applications</a>
                        </td>
                        <td>
                          <a href="/jobs/<%= job.job_id %>/rankings" class="btn btn-secondary btn-sm">View Rankings</a>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="5" class="text-center">No job postings available</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="row mt-4">
      <div class="col-md-12 mb-4">
        <div class="card">
          <div class="card-header">
            <span><i class="fas fa-chart-bar" style="transform: rotate(270deg);"></i> Number of Applications per Job</span>
          </div>
          <div class="card-body">
            <canvas id="applicationsChart" width="300" height="100"></canvas>
          </div>
        </div>
      </div>
      <div class="col-md-12">
        <div class="card">
          <div class="card-header">
            <span><i class="fas fa-chart-line icon"></i> Average Ratings per Job</span>
          </div>
          <div class="card-body">
            <canvas id="ratingsChart" width="300" height="100"></canvas>
          </div>
        </div>
      </div>
    </div>
    
       
</body>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const searchForm = document.getElementById('search-form');
    const searchInput = document.getElementById('searchInput');
    const jobsTableBody = document.querySelector('tbody'); // Telo tabele za prikaz poslova

    // Funkcija za ažuriranje tabele s poslovima
    function updateJobsTable(jobs) {
      jobsTableBody.innerHTML = ''; // Očisti trenutni sadržaj tabele

      if (jobs.length > 0) {
        jobs.forEach(job => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${job.title}</td>
            <td>${job.status}</td>
            <td>
              <a href="/jobs/${job.job_id}" class="btn btn-primary btn-sm">Details</a>
              <button class="delete-job-btn" data-id="${job.job_id}">Delete</button>
            </td>
            <td>
              <a href="/jobs/${job.job_id}/applications" class="btn btn-primary btn-sm">View Applications</a>
            </td>
            <td>
              <a href="/jobs/${job.job_id}/rankings" class="btn btn-primary btn-sm">View Rankings</a>
            </td>
          `;
          jobsTableBody.appendChild(row);
        });

        // Ponovno dodaj event listenere za dugmad za brisanje
        attachDeleteEventListeners();
      } else {
        jobsTableBody.innerHTML = '<tr><td colspan="5">No job postings available</td></tr>';
      }
    }

    // Funkcija za filtriranje poslova
    async function filterJobs(status) {
      try {
        const response = await fetch(`/jobs/filter?status=${status}`);
        const result = await response.json();

        if (response.ok) {
          updateJobsTable(result.jobs);
        } else {
          alert(result.message || 'Failed to filter jobs');
        }
      } catch (error) {
        console.error('Error filtering jobs:', error);
        alert('An error occurred while filtering jobs.');
      }
    }

    // Funkcija za pretragu poslova
    async function searchJobs(query) {
      try {
        const response = await fetch(`/jobs/search?query=${encodeURIComponent(query)}`);
        const result = await response.json();

        if (response.ok) {
          updateJobsTable(result.jobs);
        } else {
          alert(result.message || 'Failed to search jobs');
        }
      } catch (error) {
        console.error('Error searching jobs:', error);
        alert('An error occurred while searching jobs.');
      }
    }

    // Funkcija za ponovno dodavanje event listenera za dugmad za brisanje
    function attachDeleteEventListeners() {
      const deleteButtons = document.querySelectorAll('.delete-job-btn');

      deleteButtons.forEach(button => {
        button.addEventListener('click', async () => {
          const jobId = button.getAttribute('data-id');

          if (!confirm('Are you sure you want to delete this job?')) {
            return;
          }

          try {
            const response = await fetch(`/jobs/${jobId}`, { method: 'DELETE' });

            if (response.ok) {
              alert('Job deleted successfully');
              button.closest('tr').remove();
            } else {
              alert('Failed to delete job');
            }
          } catch (error) {
            console.error('Error deleting job:', error);
            alert('An error occurred while deleting the job.');
          }
        });
      });
    }

    // Dodavanje događaja na dugmad za filtriranje
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const status = button.getAttribute('data-status');
        filterJobs(status);
      });
    });

    // Dodavanje događaja na formu za pretragu
    searchForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const query = searchInput.value.trim();

      if (!query) {
        alert('Please enter a search query');
        return;
      }

      searchJobs(query);
    });

    // Dodavanje grafova za statistiku
    async function loadDashboardStats() {
    try {
      const response = await fetch('/dashboard/stats');
      const result = await response.json();

      if (!result.success) {
        throw new Error(result.message);
      }

      const { jobStats, candidateStats, avgRatings } = result.data;

      // Chart 1: Applications per Job
      const applicationsChartCtx = document.getElementById('applicationsChart').getContext('2d');
      new Chart(applicationsChartCtx, {
        type: 'bar',
        data: {
          labels: jobStats.map(stat => stat.title),
          datasets: [{
            label: 'Number of Applications',
            data: jobStats.map(stat => stat.application_count),
            backgroundColor: 'rgb(122, 41, 92,0.8)',
          }],
        },
        
      });

      // Chart 3: Average Ratings
      const ratingsChartCtx = document.getElementById('ratingsChart').getContext('2d');
      new Chart(ratingsChartCtx, {
        type: 'line',
        data: {
          labels: avgRatings.map(stat => stat.title),
          datasets: [{
            label: 'Average Ratings',
            data: avgRatings.map(stat => stat.avg_rating),
            borderColor: 'rgb(76, 39, 95,0.8)',
            fill: false,
          }],
        },
      });
    } catch (err) {
      console.error('Error loading dashboard stats:', err);
      alert('Failed to load dashboard stats.');
    }
  }

  loadDashboardStats();


    // Ponovno dodavanje event listenera za dugmad za brisanje
    attachDeleteEventListeners();
  });
</script>


</html>
